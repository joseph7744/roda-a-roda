#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <ctype.h>

// Estruturas para armazenar palavras e prêmios
typedef struct
{
    char       pista[16+1];
    int               qtd;
    char palavras[3][16+1];
}
registro;

typedef struct
{
    float premio;
}
regpremio;

registro  reg;
FILE     *Arq;
char      opc;

void cadastrarPremios(void)
{
    regpremio rpr[12] = {
	 100.00 ,
     900.00 ,
     600.00 ,
    1000.00 ,
       0.00 ,
     400.00 ,
     200.00 ,
     800.00 ,
       0.01 ,
     300.00 ,
     500.00 ,
     700.00
    };

    Arq = fopen("PREMIOS.DAT", "w+b");
    if (Arq == NULL) {
        printf("Erro ao criar PREMIOS.DAT\n");
        getch();
        exit(0);
    }

    // Lê o número de prêmios
    fwrite ( &rpr, sizeof (rpr), 1, Arq);
	if ( ferror(Arq) )
	{
		printf ("\nERRO AO GRAVAR EM PREMIOS.DAT");
		getch();
		exit(0);
	}
    fclose(Arq);
    // Lê os prêmios
    printf("\nArquivo PREMIOS.DAT criado com sucesso!")
    getch();
}

void MostraPremios(void)
{

    regpremio rpr;

    Arq = fopen("PREMIOS.DAT", "r+b");
    if(Arq == NULL)
    {
        printf("\ERRO AO ABRIR PREMIOS.DAT");
        getch();
        exit(0);
    }
    system("cls");
    printf("\n------PRÊMIOS------");
    while(!feof(Arq))
    {
        fread (&rpr, sizeof (rpr, 1, Arq));
        if(ferror(Arq))
        {
            printf("\ERRO AO LER PREMIOS.DAT");
            getch();
            exit(0);
        }
        if(!feof(Arq))
        {
            printf("\n\tR$ %10.2f", rpr.premios);
        }
    }
    fclose(Arq);
    printf("\n-------------------")
    getch();
}

void LimpaReg(void)
{
    strcpy(reg.pista, "");
    reg.qtd = 0;
    strcpy(reg.palavras[0],"");
    strcpy(reg.palavras[1],"");
    strcpy(reg.palavras[2],"");
}

void capturaDados(void)
{
    int i;
    LimpaReg();
}

void cadastrarPalavras(void)
{
    char pistas[5][pista] = {
        "vegetal",
        "automovel", 
        "cozinha",
        "Réptil",
        "Mamífero"};
        
    int quantidades[5] = {
        2, 3, 3, 1, 2};
        
    char plvrs[3][5][palavras] = {
        {"ACELGA", "ALFACE", ""},       
        {"MOTOR", "EMBREAGEM", "ESCAPAMENTO"},      
        {"PRATO", "PANELA", "FOGÃO"},
        {"JARARACA","",""},     
        {"BALEIA","MACACO",""}
    };
    
    Arq = fopen("PALAVRAS.DAT", "w+b");
    if (Arq == NULL) {
        printf("Erro ao criar PALAVRAS.DAT\n");
        getch();
        exit(0);
    }
    
    for (int i = 0; i < 3; i++) {
        // Escrevendo a pista no arquivo
        fwrite(pistas[i], sizeof(char), pistas, Arq);

        // Escrevendo a quantidade de palavras
        fwrite(&quantidades[i], sizeof(int), 1, Arq);

        // Escrevendo as palavras
        fwrite(plvrs[i], sizeof(char), quantidades[i] * palavras, Arq);
    }
    
    fclose(arquivo);
    
    printf("Arquivo PALAVRAS.DAT criado com sucesso!\n");
    
}
